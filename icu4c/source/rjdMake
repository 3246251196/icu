#!/bin/bash --

which ppc-amigaos-gcc 1>/dev/null 2>&1 || { echo "ppc-amigaos-* binaries not found. Check your path" ; exit 1 ; }

if [[ "Linux" != $(uname) ]]
then
    echo "Expected the BUILD machine to be Linux"
    exit 1
fi

CROSS_BUILD_FULL_PATH=
CORES="$(nproc)"
INSTALL_PREFIX="$(pwd)/buildAmiga/installAmiga"

mkdir buildLinux
mkdir buildAmiga

pushd buildLinux
# Hack: force support for byte swapping amiga bytes
#
sed -i "1i static int amigaInput=0;" ../tools/toolutil/pkg_genc.cpp
LINE_NUM=$(grep -n 'currently only same-endianness ELF formats are supported' ../tools/toolutil/pkg_genc.cpp | cut -f1 -d':')
(( LINE_NUM++ ))
sed -i "${LINE_NUM}d" ../tools/toolutil/pkg_genc.cpp # remove the raising of the error
sed -i "${LINE_NUM}i amigaInput=1;" ../tools/toolutil/pkg_genc.cpp
LINE_NUM=$(grep -En '^write32\(.*{' ../tools/toolutil/pkg_genc.cpp | cut -f1 -d':')
(( LINE_NUM++ ))
sed -i "${LINE_NUM}i     if(amigaInput){uint8_t tmp;    tmp = ((uint8_t*)&bitField)[0];    ((uint8_t*)&bitField)[0] = ((uint8_t*)&bitField)[3];    ((uint8_t*)&bitField)[3] = tmp;        tmp = ((uint8_t*)&bitField)[1];    ((uint8_t*)&bitField)[1] = ((uint8_t*)&bitField)[2];    ((uint8_t*)&bitField)[2] = tmp;}" ../tools/toolutil/pkg_genc.cpp
# ENDER hack

../runConfigureICU Linux || { echo "Error during configure" ; exit 1 ; }
CROSS_BUILD_FULL_PATH="$(pwd)"
make -j "$CORES" || { echo "Error during building" ; exit 1 ; }
popd

pushd buildAmiga
# default to linux
cp ../config/mh-linux ../config/mh-unknown
# __timezone hack
sed -i 's,#elif defined(__GLIBC__),#elif defined(__GLIBC__) \&\& !defined(__amigaos4__),g' ../common/putilimp.h
#
mkdir -p $INSTALL_PREFIX
# Just to make sure!
if [[ -z $INSTALL_PREFIX ]]
then
    echo "INSTALL_PREFIX must be set"
    exit 1
else
    rm -rf $INSTALL_PREFIX/*
fi
# Set "prefix" to the current directory
../configure \
    CC="ppc-amigaos-gcc -mcrt=clib2" \
    CXX="ppc-amigaos-g++ -athread=native -mcrt=clib2" \
    CPPFLAGS="-mcrt=clib2 -athread=native" \
    --disable-tests --disable-samples --disable-shared --enable-static --disable-dyload --enable-release --disable-extras \
    --disable-debug \
    --host=ppc-amigaos \
    --with-cross-build="$CROSS_BUILD_FULL_PATH" \
    --prefix=$INSTALL_PREFIX || \
    	{ echo "Error during configure for cross" ; exit 1 ; }
THREADSCXXFLAGS=-athread=native make -j $CORES || { echo "Error during building for cross" ; exit 1 ; }
make install
popd

echo "Finished. See inside \"$INSTALL_PREFIX\""
exit 0
